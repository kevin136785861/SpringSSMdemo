<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="demo.mapper.OrganizationLevelMapper">
  <resultMap id="BaseResultMap" type="demo.domain.OrganizationLevel">
    <result column="organization_id" jdbcType="BIGINT" property="organizationId" />
    <result column="organization_name" jdbcType="VARCHAR" property="organizationName" />
    <result column="organization_type_id" jdbcType="TINYINT" property="organizationTypeId" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="parent_id" jdbcType="BIGINT" property="parentId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    organization_id, organization_name, organization_type_id, sn, parent_id
  </sql>
  <select id="selectByExample" parameterType="demo.domain.OrganizationLevelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from v_organization_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="demo.domain.OrganizationLevelExample">
    delete from v_organization_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="demo.domain.OrganizationLevel">
    insert into v_organization_level (organization_id, organization_name, 
      organization_type_id, sn, parent_id
      )
    values (#{organizationId,jdbcType=BIGINT}, #{organizationName,jdbcType=VARCHAR}, 
      #{organizationTypeId,jdbcType=TINYINT}, #{sn,jdbcType=VARCHAR}, #{parentId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="demo.domain.OrganizationLevel">
    insert into v_organization_level
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="organizationName != null">
        organization_name,
      </if>
      <if test="organizationTypeId != null">
        organization_type_id,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="organizationId != null">
        #{organizationId,jdbcType=BIGINT},
      </if>
      <if test="organizationName != null">
        #{organizationName,jdbcType=VARCHAR},
      </if>
      <if test="organizationTypeId != null">
        #{organizationTypeId,jdbcType=TINYINT},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="demo.domain.OrganizationLevelExample" resultType="java.lang.Long">
    select count(*) from v_organization_level
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update v_organization_level
    <set>
      <if test="record.organizationId != null">
        organization_id = #{record.organizationId,jdbcType=BIGINT},
      </if>
      <if test="record.organizationName != null">
        organization_name = #{record.organizationName,jdbcType=VARCHAR},
      </if>
      <if test="record.organizationTypeId != null">
        organization_type_id = #{record.organizationTypeId,jdbcType=TINYINT},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update v_organization_level
    set organization_id = #{record.organizationId,jdbcType=BIGINT},
      organization_name = #{record.organizationName,jdbcType=VARCHAR},
      organization_type_id = #{record.organizationTypeId,jdbcType=TINYINT},
      sn = #{record.sn,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>